{"version":3,"file":null,"sources":["../node_modules/prest-lib/src/main/jsonml.ts","../node_modules/prest-lib/src/main/jsonml-idom.ts","../node_modules/prest-lib/src/main/hash.ts","../node_modules/prest-lib/src/main/widget.ts","../node_modules/prest-lib/src/main/widgeta.ts","../src/todowidget.ts","../src/todoactions.ts","../src/store.ts","../src/todoapp.ts","../src/index.ts"],"sourcesContent":["\nexport interface Attrs {\n    _id?: string;\n    _classes?: string[];\n    _ref?: string;\n    _key?: string;\n    _skip?: boolean;\n    data?: {[key: string]: any};\n    styles?: {[key: string]: string};\n    classes?: string[];\n    [key: string]: any;\n}\n\nexport type JsonMLFnc = (e?: HTMLElement) => void;\n\nexport interface JsonMLObj {\n    toJsonML?(): JsonML;\n}\n\nexport interface JsonML extends Array<string | Attrs | JsonML | JsonMLFnc | JsonMLObj> {\n    // 0: string;\n    // 1?: Attrs | JsonML | JsonMLFnc | JsonMObj;\n}\n\nexport interface JsonMLs extends Array<JsonML | string | JsonMLObj> {\n}\n\n\nexport interface JsonMLHandler {\n    open(tag: string, attrs: Attrs, children: number, ctx?: any): boolean;\n    close(tag: string, children: number, ctx?: any): void;\n    text(text: string, ctx?: any): void;\n    fnc(fnc: JsonMLFnc, ctx?: any): void;\n    obj(obj: JsonMLObj, ctx?: any): void;\n}\n\nexport function jsonml(jsonML: JsonML, handler: JsonMLHandler, ctx?: any): void {\n    if (!jsonML) {\n        return;\n    }\n\n    if (jsonML.length === 0 || typeof jsonML[0] !== \"string\") {\n        throw `jsonml parse error: ${JSON.stringify(jsonML)}`;\n    }\n\n    const head = jsonML[0] as string;\n    const attrsObj = jsonML[1] as any;\n    const hasAttrs = attrsObj && attrsObj.constructor === Object;\n    const childIdx = hasAttrs ? 2 : 1;\n\n    let children = 0;\n    for (let i = childIdx; i < jsonML.length; i++) {\n        if (jsonML[i] && jsonML[i].constructor !== Function) {\n            children++;\n        }\n    }\n\n    const refSplit = head.split(\"~\");\n    const ref = refSplit[1];\n    const dotSplit = refSplit[0].split(\".\");\n    const hashSplit = dotSplit[0].split(\"#\");\n    const tag = hashSplit[0] || \"div\";\n    const id = hashSplit[1];\n    const classes = dotSplit.slice(1);\n\n    let attrs: Attrs;\n    if (hasAttrs) {\n        attrs = attrsObj as Attrs;\n    } else {\n        attrs = {};\n    }\n\n    if (id) {\n        attrs._id = id;\n    }\n    if (classes.length) {\n        attrs._classes = classes;\n    }\n    if (ref) {\n        attrs._ref = ref;\n    }\n\n    const skip = handler.open(tag, attrs, children, ctx);\n\n    if (!skip) {\n        for (let i = childIdx, l = jsonML.length; i < l; i++) {\n            const jml = jsonML[i] as any;\n            if (jml === undefined) {\n                continue;\n            }\n            switch (jml.constructor) {\n                case Array:\n                    jsonml(jml, handler, ctx);\n                    break;\n                case Function:\n                    handler.fnc(jml, ctx);\n                    break;\n                case String:\n                    handler.text(jml, ctx);\n                    break;\n                case Number:\n                    handler.text(\"\" + jml, ctx);\n                    break;\n                case Boolean:\n                    handler.text(\"\" + jml, ctx);\n                    break;\n                default:\n                    handler.obj(jml, ctx);\n            }\n        }\n    }\n\n    handler.close(tag, children, ctx);\n}\n","\nimport {\n    JsonML,\n    JsonMLs,\n    JsonMLObj,\n    JsonMLFnc,\n    Attrs,\n    JsonMLHandler,\n    jsonml\n} from \"./jsonml\";\n\n\ndeclare var IncrementalDOM: any;\n\n\nclass JsonmlIDomHandler implements JsonMLHandler {\n\n    open(tag: string, attrs: Attrs, children: number, ctx?: any): boolean {\n        const props: any[] = [];\n        let id: string = attrs._id;\n        let classes: string[] = attrs._classes ? attrs._classes : [];\n        let ref: string = attrs._ref;\n        let widget: any = attrs._widget;\n        for (const a in attrs) {\n            if (attrs.hasOwnProperty(a)) {\n                switch (a) {\n                    case \"_id\":\n                    case \"_classes\":\n                    case \"_ref\":\n                    case \"_key\":\n                    case \"_skip\":\n                    case \"_widget\":\n                        break;\n                    case \"id\":\n                        id = attrs[a];\n                        break;\n                    case \"classes\":\n                        classes = classes.concat(attrs[a]);\n                        break;\n                    case \"class\":\n                        classes = classes.concat(attrs[a].split(\" \"));\n                        break;\n                    case \"data\":\n                        for (const d in attrs[a]) {\n                            if (attrs[a].hasOwnProperty(d)) {\n                                if (attrs[a][d].constructor === String) {\n                                    props.push(\"data-\" + d, attrs[a][d]);\n                                } else {\n                                    props.push(\"data-\" + d, JSON.stringify(attrs[a][d]));\n                                }\n                            }\n                        }\n                        break;\n                    case \"styles\":\n                        props.push(\"style\", attrs[a]);\n                        break;\n                    default:\n                        if (typeof attrs[a] === \"function\") {\n                            props.push(\"on\" + a, attrs[a]);\n                        } else {\n                            props.push(a, attrs[a]);\n                        }\n                }\n            }\n        }\n        if (classes.length) {\n            props.unshift(\"class\", classes.join(\" \"));\n        }\n        if (id) {\n            props.unshift(\"id\", id);\n        }\n        IncrementalDOM.elementOpen(tag, attrs._key || null, null, ...props);\n        if (attrs._skip) {\n            IncrementalDOM.skip();\n        }\n        if (ctx && ref) {\n            ctx.refs[ref] = IncrementalDOM.currentElement();\n        }\n        if (widget && \"mount\" in widget && widget.mount.constructor === Function) {\n            widget.mount(IncrementalDOM.currentElement());\n            IncrementalDOM.skip();\n        }\n        return attrs._skip ? true : false;\n    }\n\n    close(tag: string, children: number, ctx?: any): void {\n        IncrementalDOM.elementClose(tag);\n    }\n\n    text(text: string, ctx?: any): void {\n        IncrementalDOM.text(text);\n    }\n\n    fnc(fnc: JsonMLFnc, ctx?: any): void {\n        fnc(IncrementalDOM.currentElement());\n    }\n\n    obj(obj: JsonMLObj, ctx?: any): void {\n        if (\"toJsonML\" in obj) {\n            jsonml(obj.toJsonML(), this, obj);\n        } else {\n            this.text(\"\" + obj, ctx);\n        }\n    }\n\n}\n\nfunction jsonml2idom(jsonML: JsonML, ctx?: any): void {\n    jsonml(jsonML, new JsonmlIDomHandler(), ctx);\n}\n\n\nfunction jsonmls2idom(jsonMLs: JsonMLs, ctx?: any): void {\n    for (const jsonML of jsonMLs) {\n        if (jsonML.constructor === String) {\n            IncrementalDOM.text(jsonML);\n        } else if (\"toJsonML\" in (jsonML as any)) {\n            const obj = jsonML as JsonMLObj;\n            jsonml2idom(obj.toJsonML(), obj);\n        } else {\n            jsonml2idom(jsonML as JsonML, ctx);\n        }\n    }\n}\n\n\nexport function jsonml2idomPatch(node: Node, jsonML: JsonML, ctx?: any): void {\n    IncrementalDOM.patch(node,\n        (data: JsonML) => jsonml2idom(data, ctx), jsonML);\n}\n\nexport function jsonmls2idomPatch(node: Node, jsonMLs: JsonMLs, ctx?: any): void {\n    IncrementalDOM.patch(node,\n        (data: JsonMLs) => jsonmls2idom(data, ctx), jsonMLs);\n}\n","export class Hash<T> {\n\n    private _cb: (data: T) => void;\n    private _iId: any;\n\n    private _encoder = (data: T) => encodeURIComponent(JSON.stringify(data));\n    private _decoder = (data: string) => data ? JSON.parse(decodeURIComponent(data)) : undefined;\n\n    onChange(callback: (data: T) => void): this {\n        this._cb = callback;\n        if (\"onhashchange\" in window) {\n            onhashchange = () => {\n                callback(this.read());\n            };\n        } else {\n            // prest.log.warning('browser \"window.onhashchange\" not implemented, running emulation');\n            let prevHash = location.hash;\n            if (this._iId) {\n                clearInterval(this._iId);\n            }\n            this._iId = setInterval(() => {\n                if (location.hash !== prevHash) {\n                    prevHash = location.hash;\n                    callback(this.read());\n                }\n            }, 500);\n        }\n        return this;\n    }\n\n    coders(encoder: (data: T) => string, decoder: (data: string) => T): this {\n        this._encoder = encoder;\n        this._decoder = decoder;\n        return this;\n    }\n\n    start(): this {\n        this._cb(this.read());\n        return this;\n    }\n\n    read(): T {\n        const str = location.hash.slice(1);\n        return this._decoder(str);\n    }\n\n    write(hashData: T): this {\n        const str = this._encoder(hashData);\n        location.hash = \"#\" + str;\n        return this;\n    }\n\n}\n","// declare const process: any;\n// const __NODE = Boolean(\n//     typeof process === \"object\" &&\n//     process.versions &&\n//     process.versions.node);\n\n// if (__NODE) {\n//     console.log(\"I'm running in Node.JS\");\n// } else {\n//     console.log(\"I'm running in browser\");\n// }\n\nimport { JsonML, JsonMLs, JsonMLObj } from \"./jsonml\";\nimport { jsonmls2idomPatch } from \"./jsonml-idom\";\n\n\nexport interface DomWidget {\n    mount(e: HTMLElement): this;\n    umount(): this;\n    onMount?(): void;\n    onUmount?(): void;\n}\n\nexport abstract class Widget implements JsonMLObj, DomWidget {\n\n    private static __count = 0;\n\n    readonly type: string = \"Widget\"; // this.constructor.name;\n    readonly id: string = this.type + \"-\" + Widget.__count++;\n    readonly dom: HTMLElement;\n    readonly refs: { [key: string]: HTMLElement } = {};\n\n    private _updateSched: number;\n\n    constructor(type: string = \"\") {\n        if (type) {\n            this.type = type;\n        }\n    }\n\n    abstract render(): JsonMLs;\n\n    mount(e: HTMLElement = document.body): this {\n        if (\"widget\" in e) {\n            const w = (e as any).widget as Widget;\n            w && w.umount();\n        }\n        if (!this.dom) {\n            (this as any).dom = e;\n            (e as any).widget = this;\n            const jsonMLs = (this as any).render();\n            jsonmls2idomPatch(e, jsonMLs, this);\n            e.setAttribute(\"widget\", this.type);\n            if ((this as any).onMount) {\n                (this as any).onMount();\n            }\n            // onDetach(e, () => {\n            //     (this as any).dom = undefined;\n            //     if ((this as any).onUmount) {\n            //         (this as any).onUmount();\n            //     }\n            // });\n        }\n        return this;\n    }\n\n    umount(): this {\n        if (this.dom) {\n            if ((this as any).onUmount) {\n                (this as any).onUmount();\n            }\n            if (this.dom.hasAttribute(\"widget\")) {\n                this.dom.removeAttribute(\"widget\");\n            }\n            const wNodes = this.dom.querySelectorAll(\"[widget]\");\n            for (let i = 0; i < wNodes.length; i++) {\n                const w = (wNodes[i] as any).widget as Widget;\n                w && w.umount();\n            }\n            // if (this.dom.parentElement) {\n            //     this.dom.parentElement.removeChild(this.dom);\n            // }\n            while (this.dom.firstChild /*.hasChildNodes()*/) {\n                this.dom.removeChild(this.dom.firstChild);\n            }\n            (this.dom as any).widget = undefined;\n            (this as any).dom = undefined;\n        }\n        return this;\n    }\n\n    update(): this {\n        if (this.dom && !this._updateSched) {\n            this._updateSched = setTimeout(() => {\n                if (this.dom) {\n                    jsonmls2idomPatch(this.dom, this.render(), this);\n                }\n                this._updateSched = null;\n            }, 0);\n        }\n        return this;\n    }\n\n    toJsonML(): JsonML {\n        if (this.dom) {\n            if (this._updateSched) {\n                clearTimeout(this._updateSched);\n                this._updateSched = undefined;\n            } else {\n                return (\n                    [\"div\",\n                        {\n                            _skip: true,\n                            _id: this.id,\n                            _key: this.id,\n                            widget: this.type\n                        }\n                    ]\n                );\n            }\n        }\n        const jsonMLs = (this as any).render();\n        return (\n            [\"div\",\n                {\n                    _id: this.id,\n                    _key: this.id,\n                    widget: this.type\n                },\n                ...jsonMLs,\n                (e: HTMLElement) => {\n                    if (!this.dom) {\n                        (this as any).dom = e;\n                        (e as any).widget = this;\n                        if ((this as any).onMount) {\n                            (this as any).onMount();\n                        }\n                        // onDetach(e, () => {\n                        //     (this as any).dom = undefined;\n                        //     if ((this as any).onUmount) {\n                        //         (this as any).onUmount();\n                        //     }\n                        // });\n                    }\n                }\n            ]\n        );\n    }\n\n}\n\n\ndeclare var IncrementalDOM: any;\n\nIncrementalDOM.notifications.nodesDeleted = (nodes: Node[]) => {\n    nodes.forEach(node => {\n        if (node.nodeType === 1 && \"widget\" in node) {\n            const w = (node as any).widget as Widget;\n            w && w.umount();\n        }\n    });\n};\n\n\n// IncrementalDOM.notifications.nodesCreated = (nodes: Node[]) => {\n//     nodes.forEach(node => {\n//         // node may be an Element or a Text\n//         console.log(\"IncrementalDOM.notifications.nodesCreated\", node);\n//     });\n// };\n// IncrementalDOM.notifications.nodesDeleted = (nodes: Node[]) => {\n//     nodes.forEach(node => {\n//         // node may be an Element or a Text\n//         console.log(\"IncrementalDOM.notifications.nodesDeleted\", node);\n//     });\n// };\n\n\n\n// function onDetach(e: HTMLElement, callback: () => void) {\n//     new MutationObserver(mutations => {\n//         mutations.forEach(mutation => {\n//             const removed = mutation.removedNodes as any;\n//             for (const r of removed) {\n//                 console.log(r, r === e);\n//                 if (r === e) {\n//                     callback();\n//                 }\n//             }\n//         });\n//     }).observe(e.parentElement, { childList: true });\n//     // }).observe(e.parentElement, { childList: true, subtree: true });\n// }\n\n\n// const observer = new MutationObserver(mutations => {\n//     mutations.forEach(mutation => {\n//         // console.log(mutation.type);\n//         // console.log(mutation.target);\n//         // console.log(\"add\", mutation.addedNodes);\n//         // console.log(\"rm\", mutation.removedNodes);\n//         const added = mutation.addedNodes as any;\n//         for (const a of added) {\n//             console.log(\"added\", a);\n//         }\n//         const removed = mutation.removedNodes as any;\n//         for (const r of removed) {\n//             console.log(\"removed\", r);\n//         }\n//     });\n// });\n// const config = {\n//     childList: true,\n//     // attributes: true,\n//     // characterData: true,\n//     // subtree: true,\n//     // attributeOldValue: true,\n//     // characterDataOldValue: true,\n//     attributeFilter: [] as string[]\n// };\n// observer.observe(document.getElementById(\"app\"), config);\n// // observer.disconnect();\n","import { Widget } from \"./widget\";\n\n\nexport abstract class WidgetA<S, A> extends Widget {\n\n    protected _state: S;\n    protected _actions: A;\n\n    constructor(type: string = \"\", state?: S, actions?: A) {\n        super(type);\n        this._state = state;\n        this._actions = actions;\n    }\n\n    setState(state: S): this {\n        this._state = state;\n        this.update();\n        return this;\n    }\n\n    getState(): S {\n        return this._state;\n    }\n\n    setActions(actions: A): this {\n        this._actions = actions;\n        this.update();\n        return this;\n    }\n\n    getActions(): A {\n        return this._actions;\n    }\n\n}\n","import { WidgetA } from \"prest-lib/src/main/widgeta\";\nimport { JsonMLs } from \"prest-lib/src/main/jsonml\";\n\nexport interface Todo {\n    id: number;\n    title: string;\n    completed: boolean;\n}\n\nexport interface TodoState {\n    todo: string;\n    todos: Todo[];\n    filter: string;\n    edit: number;\n}\n\nexport interface TodoActions {\n    insert(title: string): void;\n    completeAll(complete: boolean): void;\n    complete(id: number): void;\n    delete(id: number): void;\n    clearCompleted(): void;\n    edit(id: number): void;\n    edited(title: string): void;\n    filter(type: string): void;\n}\n\nexport class TodoWidget extends WidgetA<TodoState, TodoActions> {\n\n    constructor() {\n        super(\"TodoWidget\");\n        this.setState({\n            todo: \"\",\n            todos: [],\n            filter: \"\",\n            edit: null\n        });\n    }\n\n    render(): JsonMLs {\n        let todos = this._state.todos;\n        const completed = this._state.todos.filter(t => t.completed);\n        const active = this._state.todos.filter(t => !t.completed);\n        switch (this._state.filter) {\n            case \"/active\":\n                todos = active;\n                break;\n            case \"/completed\":\n                todos = completed;\n                break;\n        }\n\n        return [\n            [\"section#app.todoapp\",\n                [\"header.header\",\n                    [\"h1\", \"todos\"],\n                    [\"input.new-todo\",\n                        {\n                            placeholder: \"What needs to be done?\",\n                            autofocus: \"autofocus\",\n                            value: new String(this._state.todo),\n                            change: this.onInsert\n                        }\n                    ]\n                ],\n                this._state.todos.length ?\n                    [\"section.main\",\n                        [\"input#toggle-all.toggle-all\",\n                            {\n                                type: \"checkbox\",\n                                change: this.onCompleteAll\n                            }\n                        ],\n                        [\"label\", { for: \"toggle-all\" },\n                            \"Mark all as complete\"\n                        ],\n                        [\"ul.todo-list\",\n                            ...todos.map(t => {\n                                    const classes = [];\n                                    t.completed && classes.push(\"completed\");\n                                    t.id === this._state.edit && classes.push(\"editing\");\n\n                                    return [\"li\", { _key: t.id, classes: classes },\n                                        [\"div.view\",\n                                            [\"input.toggle\",\n                                                {\n                                                    type: \"checkbox\",\n                                                    data: { id: t.id },\n                                                    change: this.onComplete\n                                                },\n                                                (e: HTMLInputElement) => e.checked = t.completed\n                                            ],\n                                            [\"label\",\n                                                {\n                                                    data: { id: t.id },\n                                                    dblclick: this.onEdit\n                                                },\n                                                t.title],\n                                            [\"button.destroy\",\n                                                {\n                                                    data: { id: t.id },\n                                                    click: this.onDelete\n                                                }\n                                            ]\n                                        ],\n                                        [\"input.edit\",\n                                            {\n                                                value: new String(t.title),\n                                                change: this.onEdited,\n                                                blur: this.onEdited\n                                            },\n                                            (e: HTMLInputElement) => setTimeout(() => e.select(), 0)\n                                        ]\n                                    ];\n                                })\n                        ]\n                    ] :\n                    \"\",\n                this._state.todos.length ?\n                    [\"footer.footer\",\n                        [\"span.todo-count\",\n                            [\"strong\", active.length],\n                            active.length === 1 ? \" item left\" : \" items left\"\n                        ],\n                        [\"ul.filters\",\n                            [\"li\",\n                                [\"a\",\n                                    {\n                                        href: \"#/\",\n                                        classes: this._state.filter === \"/\" ? [\"selected\"] : []\n                                    },\n                                    \"All\"\n                                ]\n                            ],\n                            [\"li\",\n                                [\"a\",\n                                    {\n                                        href: \"#/active\",\n                                        classes: this._state.filter === \"/active\" ? [\"selected\"] : []\n                                    },\n                                    \"Active\"\n                                ]\n                            ],\n                            [\"li\",\n                                [\"a\",\n                                    {\n                                        href: \"#/completed\",\n                                        classes: this._state.filter === \"/completed\" ? [\"selected\"] : []\n                                    },\n                                    \"Completed\"\n                                ]\n                            ]\n                        ],\n                        this._state.todos.filter(t => t.completed).length ?\n                            [\"button.clear-completed\", { click: this.onClearCompleted },\n                                \"Clear completed\"\n                            ] :\n                            \"\"\n                    ] :\n                    \"\"\n            ]\n        ];\n    }\n\n    private onInsert = (e: Event) => {\n        const title = (e.target as HTMLInputElement).value.trim();\n        if (title) {\n            this._actions.insert(title);\n        }\n    }\n\n    private onCompleteAll = (e: Event) => {\n        const complete = (e.target as HTMLInputElement).checked;\n        this._actions.completeAll(complete);\n    }\n\n    private onComplete = (e: Event) => {\n        const id = Number((e.target as HTMLElement).dataset.id);\n        this._actions.complete(id);\n    }\n\n    private onDelete = (e: Event) => {\n        const id = Number((e.target as HTMLElement).dataset.id);\n        this._actions.delete(id);\n    }\n\n    private onClearCompleted = (e: Event) => {\n        this._actions.clearCompleted();\n    }\n\n    private onEdit = (e: Event) => {\n        const id = Number((e.target as HTMLElement).dataset.id);\n        this._actions.edit(id);\n    }\n\n    private onEdited = (e: Event) => {\n        const title = (e.target as HTMLInputElement).value.trim();\n        if (title) {\n            this._actions.edited(title);\n        }\n    }\n\n}\n","import { TodoActions, Todo, TodoWidget } from \"./todowidget\";\nimport { Store } from \"./store\";\n\nexport class TodoActionsImpl implements TodoActions {\n\n    readonly widget: TodoWidget;\n    readonly store: Store<Todo[]>;\n\n    constructor(widget: TodoWidget, store: Store<Todo[]>) {\n        this.widget = widget;\n        this.store = store;\n    }\n\n    insert(title: string) {\n        const todo = {\n            id: new Date().getTime(),\n            title: title,\n            completed: false\n        } as Todo;\n        this.widget.getState().todos.push(todo);\n        this.widget.getState().todo = \"\";\n        this.widget.update();\n        this.store.write(this.widget.getState().todos);\n    }\n\n    completeAll(complete: boolean) {\n        this.widget.getState().todos.forEach(t => t.completed = complete);\n        this.widget.update();\n        this.store.write(this.widget.getState().todos);\n    }\n\n    complete(id: number) {\n        this.widget.getState().todos.forEach(t => t.id === id ? t.completed = !t.completed : null);\n        this.widget.update();\n        this.store.write(this.widget.getState().todos);\n    }\n\n    delete(id: number) {\n        this.widget.getState().todos = this.widget.getState().todos.filter(t => t.id !== id);\n        this.widget.update();\n        this.store.write(this.widget.getState().todos);\n    }\n\n    clearCompleted() {\n        this.widget.getState().todos = this.widget.getState().todos.filter(t => !t.completed);\n        this.widget.update();\n        this.store.write(this.widget.getState().todos);\n    }\n\n    edit(id: number) {\n        this.widget.getState().edit = id;\n        this.widget.update();\n    }\n\n    edited(title: string) {\n        this.widget.getState().todos.forEach(t => t.id === this.widget.getState().edit ? t.title = title : null);\n        this.widget.getState().edit = null;\n        this.widget.update();\n        this.store.write(this.widget.getState().todos);\n    }\n\n    filter(type: string) {\n        this.widget.getState().filter = type;\n        this.widget.update();\n    }\n\n}\n","export class Store<T> {\n\n    private static _key = \"todos-prest-lib\";\n\n    private _data: T;\n    private _isLS: boolean = false;\n\n    constructor(data: T) {\n        if (\"localStorage\" in self) {\n            try {\n                localStorage.getItem(Store._key);\n                this._isLS = true;\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n        if (!this.read()) {\n            this.write(data);\n        }\n    }\n\n    read(): T {\n        return this._isLS ?\n            JSON.parse(localStorage.getItem(Store._key)) :\n            this._data;\n    }\n\n    write(data: T): void {\n        this._isLS ?\n            localStorage.setItem(Store._key, JSON.stringify(data)) :\n            this._data = data;\n    }\n\n}\n","import { Hash } from \"prest-lib/src/main/hash\";\nimport { TodoWidget, Todo } from \"./todowidget\";\nimport { TodoActionsImpl } from \"./todoactions\";\nimport { Store } from \"./store\";\n\nexport class TodoApp {\n\n    store: Store<Todo[]>;\n    todoWidget: TodoWidget;\n    hash: Hash<string>;\n\n    constructor(element: HTMLElement, todos: Todo[] = []) {\n        this._initStore(todos);\n        this._initWidget(element);\n        this._initRouting();\n    }\n\n    private _initStore(todos: Todo[]): void {\n        this.store = new Store<Todo[]>(todos);\n    }\n\n    private _initWidget(element: HTMLElement): void {\n        this.todoWidget = new TodoWidget()\n            .setState({\n                todo: \"\",\n                todos: this.store.read(),\n                filter: \"\",\n                edit: null\n            });\n        this.todoWidget\n            .setActions(new TodoActionsImpl(this.todoWidget, this.store))\n            .mount(element);\n    }\n\n    private _initRouting(): void {\n        this.hash = new Hash<string>()\n            .coders(\n                data => encodeURIComponent(data),\n                str => decodeURIComponent(str)\n            )\n            .onChange(data => {\n                switch (data) {\n                    case \"/\":\n                    case \"/active\":\n                    case \"/completed\":\n                        this.todoWidget.getActions().filter(data);\n                        break;\n                    default:\n                        this.todoWidget.getActions().filter(data);\n                        this.hash.write(\"/\");\n                        break;\n                }\n            });\n        this.hash.start();\n    }\n\n}\n","import { TodoApp } from \"./todoapp\";\n\nconst todos = [\n    {\n        id: new Date().getTime(),\n        title: \"Learn prest-lib widgets\",\n        completed: true\n    },\n    {\n        id: new Date().getTime() + 1,\n        title: \"Add star to prest-lib\",\n        completed: false\n    }\n];\n\nconst app = new TodoApp(document.getElementById(\"app\"), todos);\n\n(self as any).app = app;\n(self as any).app.version = \"@VERSION@\";\n"],"names":["jsonML","handler","ctx","length","JSON","stringify","head","attrsObj","hasAttrs","constructor","Object","childIdx","children","i","Function","attrs","refSplit","split","ref","dotSplit","hashSplit","tag","id","classes","slice","_id","_classes","_ref","open","l","jml","undefined","Array","jsonml","fnc","String","text","Number","Boolean","obj","close","JsonmlIDomHandler","jsonMLs","jsonMLs_1","_i","IncrementalDOM","jsonml2idom","toJsonML","node","patch","data","jsonmls2idom","this","encodeURIComponent","parse","decodeURIComponent","Hash","callback","_cb","window","onhashchange","_this","read","prevHash_1","location","hash","_iId","clearInterval","setInterval","encoder","decoder","_encoder","_decoder","str","hashData","props","widget","_widget","a","hasOwnProperty","concat","d","push","unshift","join","elementOpen","_key","_skip","skip","refs","currentElement","mount","elementClose","type","Widget","__count","e","document","body","w","umount","dom","jsonmls2idomPatch","render","setAttribute","onMount","onUmount","hasAttribute","removeAttribute","wNodes","querySelectorAll","firstChild","removeChild","_updateSched","setTimeout","clearTimeout","notifications","nodesDeleted","nodes","forEach","nodeType","state","actions","_super","_state","_actions","__extends","WidgetA","update","title","target","value","trim","insert","complete","checked","completeAll","dataset","delete","clearCompleted","edit","edited","setState","todo","todos","filter","TodoWidget","completed","t","active","placeholder","autofocus","change","onInsert","onCompleteAll","for","map","onComplete","dblclick","onEdit","click","onDelete","onEdited","blur","select","href","onClearCompleted","store","TodoActionsImpl","Date","getTime","getState","write","self","localStorage","getItem","Store","_isLS","console","warn","_data","setItem","element","_initStore","_initWidget","_initRouting","TodoApp","todoWidget","setActions","coders","onChange","getActions","start","app","getElementById","version"],"mappings":"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"}