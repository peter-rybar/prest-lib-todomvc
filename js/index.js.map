{"version":3,"file":null,"sources":["../node_modules/prest-lib/src/main/jsonml.ts","../node_modules/prest-lib/src/main/jsonml-idom.ts","../src/todohandlers.ts","../node_modules/prest-lib/src/main/hash.ts","../node_modules/prest-lib/src/main/widget.ts","../node_modules/prest-lib/src/main/events.ts","../node_modules/prest-lib/src/main/widgete.ts","../src/todowidget.ts","../src/store.ts","../src/todoapp.ts","../src/index.ts"],"sourcesContent":["\nexport interface Attrs {\n    _id?: string;\n    _classes?: string[];\n    _ref?: string;\n    _key?: string;\n    _skip?: boolean;\n    data?: {[key: string]: any};\n    styles?: {[key: string]: string};\n    classes?: string[];\n    [key: string]: any;\n}\n\nexport type JsonMLFnc = (e?: HTMLElement) => void;\n\nexport interface JsonMLObj {\n    toJsonML?(): JsonML;\n}\n\nexport interface JsonML extends Array<string | Attrs | JsonML | JsonMLFnc | JsonMLObj> {\n    // 0: string;\n    // 1?: Attrs | JsonML | JsonMLFnc | JsonMObj;\n}\n\nexport interface JsonMLs extends Array<JsonML | string | JsonMLObj> {\n}\n\n\nexport interface JsonMLHandler {\n    open(tag: string, attrs: Attrs, children: number, ctx?: any): boolean;\n    close(tag: string, children: number, ctx?: any): void;\n    text(text: string, ctx?: any): void;\n    fnc(fnc: JsonMLFnc, ctx?: any): void;\n    obj(obj: JsonMLObj, ctx?: any): void;\n}\n\nexport function jsonml(jsonML: JsonML, handler: JsonMLHandler, ctx?: any): void {\n    if (!jsonML) {\n        return;\n    }\n\n    if (jsonML.length === 0 || typeof jsonML[0] !== \"string\") {\n        throw `jsonml parse error: ${JSON.stringify(jsonML)}`;\n    }\n\n    const head = jsonML[0] as string;\n    const attrsObj = jsonML[1] as any;\n    const hasAttrs = attrsObj && attrsObj.constructor === Object;\n    const childIdx = hasAttrs ? 2 : 1;\n\n    let children = 0;\n    for (let i = childIdx; i < jsonML.length; i++) {\n        if (jsonML[i] && jsonML[i].constructor !== Function) {\n            children++;\n        }\n    }\n\n    const refSplit = head.split(\"~\");\n    const ref = refSplit[1];\n    const dotSplit = refSplit[0].split(\".\");\n    const hashSplit = dotSplit[0].split(\"#\");\n    const tag = hashSplit[0] || \"div\";\n    const id = hashSplit[1];\n    const classes = dotSplit.slice(1);\n\n    let attrs: Attrs;\n    if (hasAttrs) {\n        attrs = attrsObj as Attrs;\n    } else {\n        attrs = {};\n    }\n\n    if (id) {\n        attrs._id = id;\n    }\n    if (classes.length) {\n        attrs._classes = classes;\n    }\n    if (ref) {\n        attrs._ref = ref;\n    }\n\n    const skip = handler.open(tag, attrs, children, ctx);\n\n    if (!skip) {\n        for (let i = childIdx, l = jsonML.length; i < l; i++) {\n            const jml = jsonML[i] as any;\n            if (jml === undefined) {\n                continue;\n            }\n            switch (jml.constructor) {\n                case Array:\n                    jsonml(jml, handler, ctx);\n                    break;\n                case Function:\n                    handler.fnc(jml, ctx);\n                    break;\n                case String:\n                    handler.text(jml, ctx);\n                    break;\n                case Number:\n                    handler.text(\"\" + jml, ctx);\n                    break;\n                case Boolean:\n                    handler.text(\"\" + jml, ctx);\n                    break;\n                default:\n                    handler.obj(jml, ctx);\n            }\n        }\n    }\n\n    handler.close(tag, children, ctx);\n}\n","\nimport {\n    JsonML,\n    JsonMLs,\n    JsonMLObj,\n    JsonMLFnc,\n    Attrs,\n    JsonMLHandler,\n    jsonml\n} from \"./jsonml\";\n\n\ndeclare var IncrementalDOM: any;\n\n\nclass JsonmlIDomHandler implements JsonMLHandler {\n\n    open(tag: string, attrs: Attrs, children: number, ctx?: any): boolean {\n        const props: any[] = [];\n        let id: string = attrs._id;\n        let classes: string[] = attrs._classes ? attrs._classes : [];\n        let ref: string = attrs._ref;\n        let widget: any = attrs._widget;\n        for (const a in attrs) {\n            if (attrs.hasOwnProperty(a)) {\n                switch (a) {\n                    case \"_id\":\n                    case \"_classes\":\n                    case \"_ref\":\n                    case \"_key\":\n                    case \"_skip\":\n                    case \"_widget\":\n                        break;\n                    case \"id\":\n                        id = attrs[a];\n                        break;\n                    case \"classes\":\n                        classes = classes.concat(attrs[a]);\n                        break;\n                    case \"class\":\n                        classes = classes.concat(attrs[a].split(\" \"));\n                        break;\n                    case \"data\":\n                        for (const d in attrs[a]) {\n                            if (attrs[a].hasOwnProperty(d)) {\n                                if (attrs[a][d].constructor === String) {\n                                    props.push(\"data-\" + d, attrs[a][d]);\n                                } else {\n                                    props.push(\"data-\" + d, JSON.stringify(attrs[a][d]));\n                                }\n                            }\n                        }\n                        break;\n                    case \"styles\":\n                        props.push(\"style\", attrs[a]);\n                        break;\n                    default:\n                        if (typeof attrs[a] === \"function\") {\n                            props.push(\"on\" + a, attrs[a]);\n                        } else {\n                            props.push(a, attrs[a]);\n                        }\n                }\n            }\n        }\n        if (classes.length) {\n            props.unshift(\"class\", classes.join(\" \"));\n        }\n        if (id) {\n            props.unshift(\"id\", id);\n        }\n        IncrementalDOM.elementOpen(tag, attrs._key || null, null, ...props);\n        if (attrs._skip) {\n            IncrementalDOM.skip();\n        }\n        if (ctx && ref) {\n            ctx.refs[ref] = IncrementalDOM.currentElement();\n        }\n        if (widget && \"mount\" in widget && widget.mount.constructor === Function) {\n            widget.mount(IncrementalDOM.currentElement());\n            IncrementalDOM.skip();\n        }\n        return attrs._skip ? true : false;\n    }\n\n    close(tag: string, children: number, ctx?: any): void {\n        IncrementalDOM.elementClose(tag);\n    }\n\n    text(text: string, ctx?: any): void {\n        IncrementalDOM.text(text);\n    }\n\n    fnc(fnc: JsonMLFnc, ctx?: any): void {\n        fnc(IncrementalDOM.currentElement());\n    }\n\n    obj(obj: JsonMLObj, ctx?: any): void {\n        if (\"toJsonML\" in obj) {\n            jsonml(obj.toJsonML(), this, obj);\n        } else {\n            this.text(\"\" + obj, ctx);\n        }\n    }\n\n}\n\nfunction jsonml2idom(jsonML: JsonML, ctx?: any): void {\n    jsonml(jsonML, new JsonmlIDomHandler(), ctx);\n}\n\n\nfunction jsonmls2idom(jsonMLs: JsonMLs, ctx?: any): void {\n    for (const jsonML of jsonMLs) {\n        if (jsonML.constructor === String) {\n            IncrementalDOM.text(jsonML);\n        } else if (\"toJsonML\" in (jsonML as any)) {\n            const obj = jsonML as JsonMLObj;\n            jsonml2idom(obj.toJsonML(), obj);\n        } else {\n            jsonml2idom(jsonML as JsonML, ctx);\n        }\n    }\n}\n\n\nexport function jsonml2idomPatch(node: Node, jsonML: JsonML, ctx?: any): void {\n    IncrementalDOM.patch(node,\n        (data: JsonML) => jsonml2idom(data, ctx), jsonML);\n}\n\nexport function jsonmls2idomPatch(node: Node, jsonMLs: JsonMLs, ctx?: any): void {\n    IncrementalDOM.patch(node,\n        (data: JsonMLs) => jsonmls2idom(data, ctx), jsonMLs);\n}\n","import { Events } from \"prest-lib/src/main/events\";\nimport { TodoWidget, Todo } from \"./todowidget\";\nimport { Store } from \"./store\";\n\nexport function todotHandlers(events: Events<TodoWidget>,\n                              store: Store<Todo[]>): void {\n    events\n        .on(\"insert\", (title: string, w: TodoWidget) => {\n            const todo = {\n                id: new Date().getTime(),\n                title: title,\n                completed: false\n            } as Todo;\n            w.getState().todos.push(todo);\n            w.getState().todo = \"\";\n            w.update();\n        })\n        .on(\"complete-all\", (complete: boolean, w: TodoWidget) => {\n            w.getState().todos.forEach(t => (t.completed = complete));\n            w.update();\n        })\n        .on(\"complete\", (id: number, w: TodoWidget) => {\n            w.getState().todos.forEach(\n                t => (t.id === id ? (t.completed = !t.completed) : null)\n            );\n            w.update();\n        })\n        .on(\"delete\", (id: number, w: TodoWidget) => {\n            w.getState().todos = w.getState().todos.filter(t => t.id !== id);\n            w.update();\n        })\n        .on(\"clear-completed\", (data: any, w: TodoWidget) => {\n            w.getState().todos = w.getState().todos.filter(t => !t.completed);\n            w.update();\n        })\n        .on(\"edit\", (id: number, w: TodoWidget) => {\n            w.getState().edit = id;\n            w.update();\n        })\n        .on(\"edited\", (title: string, w: TodoWidget) => {\n            w.getState().todos.forEach(\n                t => (t.id === w.getState().edit ? (t.title = title) : null)\n            );\n            w.getState().edit = null;\n            w.update();\n        })\n        .any((data: any, w: TodoWidget, e: string) => {\n            console.log(e, JSON.stringify(data, null, 4));\n            console.log(\"state\", JSON.stringify(w.getState(), null, 4));\n            store.write(w.getState().todos);\n        });\n}\n","export class Hash<T> {\n\n    private _cb: (data: T) => void;\n    private _iId: any;\n\n    private _encoder = (data: T) => encodeURIComponent(JSON.stringify(data));\n    private _decoder = (data: string) => data ? JSON.parse(decodeURIComponent(data)) : undefined;\n\n    onChange(callback: (data: T) => void): this {\n        this._cb = callback;\n        if (\"onhashchange\" in window) {\n            onhashchange = () => {\n                callback(this.read());\n            };\n        } else {\n            // prest.log.warning('browser \"window.onhashchange\" not implemented, running emulation');\n            let prevHash = location.hash;\n            if (this._iId) {\n                clearInterval(this._iId);\n            }\n            this._iId = setInterval(() => {\n                if (location.hash !== prevHash) {\n                    prevHash = location.hash;\n                    callback(this.read());\n                }\n            }, 500);\n        }\n        return this;\n    }\n\n    coders(encoder: (data: T) => string, decoder: (data: string) => T): this {\n        this._encoder = encoder;\n        this._decoder = decoder;\n        return this;\n    }\n\n    start(): this {\n        this._cb(this.read());\n        return this;\n    }\n\n    read(): T {\n        const str = location.hash.slice(1);\n        return this._decoder(str);\n    }\n\n    write(hashData: T): this {\n        const str = this._encoder(hashData);\n        location.hash = \"#\" + str;\n        return this;\n    }\n\n}\n","// declare const process: any;\n// const __NODE = Boolean(\n//     typeof process === \"object\" &&\n//     process.versions &&\n//     process.versions.node);\n\n// if (__NODE) {\n//     console.log(\"I'm running in Node.JS\");\n// } else {\n//     console.log(\"I'm running in browser\");\n// }\n\nimport { JsonML, JsonMLs, JsonMLObj } from \"./jsonml\";\nimport { jsonmls2idomPatch } from \"./jsonml-idom\";\n\n\nexport interface DomWidget {\n    mount(e: HTMLElement): this;\n    umount(): this;\n    onMount?(): void;\n    onUmount?(): void;\n}\n\nexport abstract class Widget implements JsonMLObj, DomWidget {\n\n    private static __count = 0;\n\n    readonly type: string = \"Widget\"; // this.constructor.name;\n    readonly id: string = this.type + \"-\" + Widget.__count++;\n    readonly dom: HTMLElement;\n    readonly refs: { [key: string]: HTMLElement } = {};\n\n    private _updateSched: number;\n\n    constructor(type: string = \"\") {\n        if (type) {\n            this.type = type;\n        }\n    }\n\n    abstract render(): JsonMLs;\n\n    mount(e: HTMLElement = document.body): this {\n        if (\"widget\" in e) {\n            const w = (e as any).widget as Widget;\n            w && w.umount();\n        }\n        if (!this.dom) {\n            (this as any).dom = e;\n            (e as any).widget = this;\n            const jsonMLs = (this as any).render();\n            jsonmls2idomPatch(e, jsonMLs, this);\n            e.setAttribute(\"widget\", this.type);\n            if ((this as any).onMount) {\n                (this as any).onMount();\n            }\n            // onDetach(e, () => {\n            //     (this as any).dom = undefined;\n            //     if ((this as any).onUmount) {\n            //         (this as any).onUmount();\n            //     }\n            // });\n        }\n        return this;\n    }\n\n    umount(): this {\n        if (this.dom) {\n            if ((this as any).onUmount) {\n                (this as any).onUmount();\n            }\n            if (this.dom.hasAttribute(\"widget\")) {\n                this.dom.removeAttribute(\"widget\");\n            }\n            const wNodes = this.dom.querySelectorAll(\"[widget]\");\n            for (let i = 0; i < wNodes.length; i++) {\n                const w = (wNodes[i] as any).widget as Widget;\n                w && w.umount();\n            }\n            // if (this.dom.parentElement) {\n            //     this.dom.parentElement.removeChild(this.dom);\n            // }\n            while (this.dom.firstChild /*.hasChildNodes()*/) {\n                this.dom.removeChild(this.dom.firstChild);\n            }\n            (this.dom as any).widget = undefined;\n            (this as any).dom = undefined;\n        }\n        return this;\n    }\n\n    update(): this {\n        if (this.dom && !this._updateSched) {\n            this._updateSched = setTimeout(() => {\n                if (this.dom) {\n                    jsonmls2idomPatch(this.dom, this.render(), this);\n                }\n                this._updateSched = null;\n            }, 0);\n        }\n        return this;\n    }\n\n    toJsonML(): JsonML {\n        if (this.dom) {\n            if (this._updateSched) {\n                clearTimeout(this._updateSched);\n                this._updateSched = undefined;\n            } else {\n                return (\n                    [\"div\",\n                        {\n                            _skip: true,\n                            _id: this.id,\n                            _key: this.id,\n                            widget: this.type\n                        }\n                    ]\n                );\n            }\n        }\n        const jsonMLs = (this as any).render();\n        return (\n            [\"div\",\n                {\n                    _id: this.id,\n                    _key: this.id,\n                    widget: this.type\n                },\n                ...jsonMLs,\n                (e: HTMLElement) => {\n                    if (!this.dom) {\n                        (this as any).dom = e;\n                        (e as any).widget = this;\n                        if ((this as any).onMount) {\n                            (this as any).onMount();\n                        }\n                        // onDetach(e, () => {\n                        //     (this as any).dom = undefined;\n                        //     if ((this as any).onUmount) {\n                        //         (this as any).onUmount();\n                        //     }\n                        // });\n                    }\n                }\n            ]\n        );\n    }\n\n}\n\n\ndeclare var IncrementalDOM: any;\n\nIncrementalDOM.notifications.nodesDeleted = (nodes: Node[]) => {\n    nodes.forEach(node => {\n        if (node.nodeType === 1 && \"widget\" in node) {\n            const w = (node as any).widget as Widget;\n            w && w.umount();\n        }\n    });\n};\n\n\n// IncrementalDOM.notifications.nodesCreated = (nodes: Node[]) => {\n//     nodes.forEach(node => {\n//         // node may be an Element or a Text\n//         console.log(\"IncrementalDOM.notifications.nodesCreated\", node);\n//     });\n// };\n// IncrementalDOM.notifications.nodesDeleted = (nodes: Node[]) => {\n//     nodes.forEach(node => {\n//         // node may be an Element or a Text\n//         console.log(\"IncrementalDOM.notifications.nodesDeleted\", node);\n//     });\n// };\n\n\n\n// function onDetach(e: HTMLElement, callback: () => void) {\n//     new MutationObserver(mutations => {\n//         mutations.forEach(mutation => {\n//             const removed = mutation.removedNodes as any;\n//             for (const r of removed) {\n//                 console.log(r, r === e);\n//                 if (r === e) {\n//                     callback();\n//                 }\n//             }\n//         });\n//     }).observe(e.parentElement, { childList: true });\n//     // }).observe(e.parentElement, { childList: true, subtree: true });\n// }\n\n\n// const observer = new MutationObserver(mutations => {\n//     mutations.forEach(mutation => {\n//         // console.log(mutation.type);\n//         // console.log(mutation.target);\n//         // console.log(\"add\", mutation.addedNodes);\n//         // console.log(\"rm\", mutation.removedNodes);\n//         const added = mutation.addedNodes as any;\n//         for (const a of added) {\n//             console.log(\"added\", a);\n//         }\n//         const removed = mutation.removedNodes as any;\n//         for (const r of removed) {\n//             console.log(\"removed\", r);\n//         }\n//     });\n// });\n// const config = {\n//     childList: true,\n//     // attributes: true,\n//     // characterData: true,\n//     // subtree: true,\n//     // attributeOldValue: true,\n//     // characterDataOldValue: true,\n//     attributeFilter: [] as string[]\n// };\n// observer.observe(document.getElementById(\"app\"), config);\n// // observer.disconnect();\n","\nexport class Events<C> {\n\n    static any = \"\";\n\n    private _ctx: C;\n    private _cbs: { [e: string]: Array<(data: any, ctx: C, e: string) => void> };\n    private _cb: Array<(data: any, ctx: C, e: string) => void>;\n\n    constructor(ctx?: C) {\n        this._cbs = {};\n        this._ctx = ctx;\n    }\n\n    on(e: string, cb: (data: any, ctx: C, e: string) => void): this {\n        if (!e) {\n            if (!this._cb) {\n                this._cb = [];\n            }\n            this._cb.push(cb);\n        }\n        if (!(e in this._cbs)) {\n            this._cbs[e] = [];\n        }\n        if (this._cbs[e].indexOf(cb) === -1) {\n            this._cbs[e].push(cb);\n        }\n        return this;\n    }\n\n    any(cb: (data: any, ctx: C, e: string) => void): this {\n        this.on(Events.any, cb);\n        return this;\n    }\n\n    all(es: string[], cb: (data: any, ctx: C, e: string) => void): this {\n        es.forEach(e => this.on(e, cb));\n        return this;\n    }\n\n    once(e: string, cb: (data: any, ctx: C, e: string) => void): this {\n        const wrap = (d: any, c: C, ev: string) => {\n            this.off(e, wrap);\n            cb(d, c, ev);\n        };\n        this.on(e, wrap);\n        return this;\n    }\n\n    off(e: string, cb?: (data: any, ctx: C, e: string) => void): this {\n        if (!e) {\n            if (cb) {\n                this._cb.splice(this._cbs[e].indexOf(cb), 1);\n            } else {\n                this._cb.length = 0;\n                delete this._cb;\n            }\n        }\n        if (e in this._cbs) {\n            if (cb) {\n                this._cbs[e].splice(this._cbs[e].indexOf(cb), 1);\n            } else {\n                this._cbs[e].length = 0;\n                delete this._cbs[e];\n            }\n        }\n        return this;\n    }\n\n    emit(e: string, data?: any): this {\n        if (e in this._cbs) {\n            for (let i = 0, l = this._cbs[e].length; i < l; i++) {\n                this._cbs[e][i](data, this._ctx, e);\n            }\n        }\n        if (this._cb) {\n            for (let i = 0, l = this._cb.length; i < l; i++) {\n                this._cb[i](data, this._ctx, e);\n            }\n        }\n        return this;\n    }\n\n}\n\n\n// const es = new Events<number>(3);\n\n// es.any((data, ctx, e) => console.log(\"any:\", data, ctx, e));\n\n// es.emit(\"e\", \"eee1\");\n// es.on(\"e\", (data, ctx, e) => console.log(data, ctx, e));\n// es.emit(\"e\", \"eee2\");\n// es.off(\"e\");\n// es.emit(\"e\", \"eee3\");\n\n// es.off(Events.any);\n\n// es.once(Events.any, (data, ctx, e) => console.log(\"once all:\", data, ctx, e));\n\n// es.emit(\"o\", \"ooo1\");\n// es.once(\"o\", (data, ctx, e) => console.log(data, ctx, e));\n// es.emit(\"o\", \"ooo2\");\n// es.emit(\"o\", \"ooo3\");\n\n// es.all([\"e1\", \"e3\"], (data, ctx, e) => console.log(data, ctx, e));\n// es.emit(\"e1\", \"all e1\");\n// es.emit(\"e2\", \"all e2\");\n// es.emit(\"e3\", \"all e3\");\n","import { Widget } from \"./widget\";\nimport { Events } from \"./events\";\n\n\nexport abstract class WidgetE<S> extends Widget {\n\n    protected _state: S;\n\n    readonly events: Events<this>;\n\n    constructor(type: string = \"\", state?: S, events?: Events<any>) {\n        super(type);\n        this._state = state;\n        this.events = events ? events : new Events<this>(this);\n    }\n\n    setState(state: S): this {\n        this._state = state;\n        this.update();\n        return this;\n    }\n\n    getState(): S {\n        return this._state;\n    }\n\n}\n","import { WidgetE } from \"prest-lib/src/main/widgete\";\nimport { JsonMLs } from \"prest-lib/src/main/jsonml\";\n\nexport interface Todo {\n    id: number;\n    title: string;\n    completed: boolean;\n}\n\nexport interface TodoState {\n    todo: string;\n    todos: Todo[];\n    filter: string;\n    edit: number;\n}\n\nexport class TodoWidget extends WidgetE<TodoState> {\n\n    constructor() {\n        super(\"TodoWidget\");\n        this.setState({\n            todo: \"\",\n            todos: [],\n            filter: \"\",\n            edit: null\n        });\n    }\n\n    render(): JsonMLs {\n        let todos = this._state.todos;\n        const completed = this._state.todos.filter(t => t.completed);\n        const active = this._state.todos.filter(t => !t.completed);\n        switch (this._state.filter) {\n            case \"/active\":\n                todos = active;\n                break;\n            case \"/completed\":\n                todos = completed;\n                break;\n        }\n\n        return [\n            [\"section#app.todoapp\",\n                [\"header.header\",\n                    [\"h1\", \"todos\"],\n                    [\"input.new-todo\",\n                        {\n                            placeholder: \"What needs to be done?\",\n                            autofocus: \"autofocus\",\n                            value: new String(this._state.todo),\n                            change: this.onInsert\n                        }\n                    ]\n                ],\n                this._state.todos.length ?\n                    [\"section.main\",\n                        [\"input#toggle-all.toggle-all\",\n                            {\n                                type: \"checkbox\",\n                                change: this.onCompleteAll\n                            }\n                        ],\n                        [\"label\", { for: \"toggle-all\" },\n                            \"Mark all as complete\"\n                        ],\n                        [\"ul.todo-list\",\n                            ...todos.map(t => {\n                                    const classes = [];\n                                    t.completed && classes.push(\"completed\");\n                                    t.id === this._state.edit && classes.push(\"editing\");\n\n                                    return [\"li\", { _key: t.id, classes: classes },\n                                        [\"div.view\",\n                                            [\"input.toggle\",\n                                                {\n                                                    type: \"checkbox\",\n                                                    data: { id: t.id },\n                                                    change: this.onComplete\n                                                },\n                                                (e: HTMLInputElement) => e.checked = t.completed\n                                            ],\n                                            [\"label\",\n                                                {\n                                                    data: { id: t.id },\n                                                    dblclick: this.onEdit\n                                                },\n                                                t.title],\n                                            [\"button.destroy\",\n                                                {\n                                                    data: { id: t.id },\n                                                    click: this.onDelete\n                                                }\n                                            ]\n                                        ],\n                                        [\"input.edit\",\n                                            {\n                                                value: new String(t.title),\n                                                change: this.onEdited,\n                                                blur: this.onEdited\n                                            },\n                                            (e: HTMLInputElement) => setTimeout(() => e.select(), 0)\n                                        ]\n                                    ];\n                                })\n                        ]\n                    ] :\n                    \"\",\n                this._state.todos.length ?\n                    [\"footer.footer\",\n                        [\"span.todo-count\",\n                            [\"strong\", active.length],\n                            active.length === 1 ? \" item left\" : \" items left\"\n                        ],\n                        [\"ul.filters\",\n                            [\"li\",\n                                [\"a\",\n                                    {\n                                        href: \"#/\",\n                                        classes: this._state.filter === \"/\" ? [\"selected\"] : []\n                                    },\n                                    \"All\"\n                                ]\n                            ],\n                            [\"li\",\n                                [\"a\",\n                                    {\n                                        href: \"#/active\",\n                                        classes: this._state.filter === \"/active\" ? [\"selected\"] : []\n                                    },\n                                    \"Active\"\n                                ]\n                            ],\n                            [\"li\",\n                                [\"a\",\n                                    {\n                                        href: \"#/completed\",\n                                        classes: this._state.filter === \"/completed\" ? [\"selected\"] : []\n                                    },\n                                    \"Completed\"\n                                ]\n                            ]\n                        ],\n                        this._state.todos.filter(t => t.completed).length ?\n                            [\"button.clear-completed\", { click: this.onClearCompleted },\n                                \"Clear completed\"\n                            ] :\n                            \"\"\n                    ] :\n                    \"\"\n            ]\n        ];\n    }\n\n    private onInsert = (e: Event) => {\n        const title = (e.target as HTMLInputElement).value.trim();\n        if (title) {\n            this.events.emit(\"insert\", title);\n        }\n    }\n\n    private onCompleteAll = (e: Event) => {\n        const complete = (e.target as HTMLInputElement).checked;\n        this.events.emit(\"complete-all\", complete);\n    }\n\n    private onComplete = (e: Event) => {\n        const id = Number((e.target as HTMLElement).dataset.id);\n        this.events.emit(\"complete\", id);\n    }\n\n    private onDelete = (e: Event) => {\n        const id = Number((e.target as HTMLElement).dataset.id);\n        this.events.emit(\"delete\", id);\n    }\n\n    private onClearCompleted = (e: Event) => {\n        this.events.emit(\"clear-completed\");\n    }\n\n    private onEdit = (e: Event) => {\n        const id = Number((e.target as HTMLElement).dataset.id);\n        this.events.emit(\"edit\", id);\n    }\n\n    private onEdited = (e: Event) => {\n        const title = (e.target as HTMLInputElement).value.trim();\n        if (title) {\n            this.events.emit(\"edited\", title);\n        }\n    }\n\n}\n","export class Store<T> {\n\n    private static _key = \"todos-prest-lib\";\n\n    private _data: T;\n    private _isLS: boolean = false;\n\n    constructor(data: T) {\n        if (\"localStorage\" in self) {\n            try {\n                localStorage.getItem(Store._key);\n                this._isLS = true;\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n        if (!this.read()) {\n            this.write(data);\n        }\n    }\n\n    read(): T {\n        return this._isLS ?\n            JSON.parse(localStorage.getItem(Store._key)) :\n            this._data;\n    }\n\n    write(data: T): void {\n        this._isLS ?\n            localStorage.setItem(Store._key, JSON.stringify(data)) :\n            this._data = data;\n    }\n\n}\n","import { Hash } from \"prest-lib/src/main/hash\";\nimport { TodoWidget, Todo } from \"./todowidget\";\nimport { Store } from \"./store\";\nimport { todotHandlers } from \"./todohandlers\";\n\nexport class TodoApp {\n\n    store: Store<Todo[]>;\n    todoWidget: TodoWidget;\n    hash: Hash<string>;\n\n    constructor(element: HTMLElement, todos: Todo[] = []) {\n        this._initStore(todos);\n        this._initWidget(element);\n        this._initRouting();\n    }\n\n    private _initStore(todos: Todo[]): void {\n        this.store = new Store<Todo[]>(todos);\n    }\n\n    private _initWidget(element: HTMLElement): void {\n        this.todoWidget = new TodoWidget()\n            .setState({\n                todo: \"\",\n                todos: this.store.read(),\n                filter: \"\",\n                edit: null\n            });\n        todotHandlers(this.todoWidget.events, this.store);\n        this.todoWidget.mount(element);\n    }\n\n    private _initRouting(): void {\n        this.hash = new Hash<string>()\n        .coders(\n            data => encodeURIComponent(data),\n            str => decodeURIComponent(str)\n        )\n        .onChange(data => {\n            switch (data) {\n                case \"/\":\n                case \"/active\":\n                case \"/completed\":\n                    this.todoWidget.getState().filter = data;\n                    this.todoWidget.update();\n                    this.todoWidget.events.emit(\"filter\", data);\n                    break;\n                default:\n                    this.todoWidget.getState().filter = \"\";\n                    this.todoWidget.update();\n                    this.todoWidget.events.emit(\"filter\", data);\n                    this.hash.write(\"/\");\n                    break;\n            }\n        })\n        .start();\n    }\n\n}\n","import { TodoApp } from \"./todoapp\";\n\nconst todos = [\n    {\n        id: new Date().getTime(),\n        title: \"Learn prest-lib widgets\",\n        completed: true\n    },\n    {\n        id: new Date().getTime() + 1,\n        title: \"Add star to prest-lib\",\n        completed: false\n    }\n];\n\nconst app = new TodoApp(document.getElementById(\"app\"), todos);\n\n(self as any).app = app;\n(self as any).app.version = \"@VERSION@\";\n"],"names":["jsonML","handler","ctx","length","JSON","stringify","head","attrsObj","hasAttrs","constructor","Object","childIdx","children","i","Function","attrs","refSplit","split","ref","dotSplit","hashSplit","tag","id","classes","slice","_id","_classes","_ref","open","l","jml","undefined","Array","jsonml","fnc","String","text","Number","Boolean","obj","close","JsonmlIDomHandler","jsonMLs","jsonMLs_1","_i","IncrementalDOM","jsonml2idom","toJsonML","node","patch","data","jsonmls2idom","events","store","on","title","w","todo","Date","getTime","completed","getState","todos","push","update","complete","forEach","t","filter","edit","any","e","console","log","write","this","encodeURIComponent","parse","decodeURIComponent","Hash","callback","_cb","window","onhashchange","_this","read","prevHash_1","location","hash","_iId","clearInterval","setInterval","encoder","decoder","_encoder","_decoder","str","hashData","props","widget","_widget","a","hasOwnProperty","concat","d","unshift","join","elementOpen","_key","_skip","skip","refs","currentElement","mount","elementClose","type","Widget","__count","document","body","umount","dom","jsonmls2idomPatch","render","setAttribute","onMount","onUmount","hasAttribute","removeAttribute","wNodes","querySelectorAll","firstChild","removeChild","_updateSched","setTimeout","clearTimeout","notifications","nodesDeleted","nodes","nodeType","_cbs","_ctx","Events","cb","indexOf","es","wrap","c","ev","off","splice","state","_super","_state","__extends","WidgetE","target","value","trim","emit","checked","dataset","setState","TodoWidget","active","placeholder","autofocus","change","onInsert","onCompleteAll","for","map","onComplete","dblclick","onEdit","click","onDelete","onEdited","blur","select","href","onClearCompleted","self","localStorage","getItem","Store","_isLS","warn","_data","setItem","element","_initStore","_initWidget","_initRouting","TodoApp","todoWidget","todotHandlers","coders","onChange","start","app","getElementById","version"],"mappings":"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"}